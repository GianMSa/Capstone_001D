-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.bodega_central
(
    id_bdg bigint NOT NULL,
    nombre_bdg character varying(255) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT bodega_pkey PRIMARY KEY (id_bdg)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    id bigint NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default",
    descripcion character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT categoria_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.detalle_pedido
(
    id bigint NOT NULL,
    cantidad numeric NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default",
    productos_pedido_fk bigint NOT NULL,
    pedidos_fk bigint NOT NULL,
    CONSTRAINT detalle_pedido_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.estado_pedido
(
    id_estped bigint NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT estado_pedido_pkey PRIMARY KEY (id_estped)
);

CREATE TABLE IF NOT EXISTS public.historial
(
    id_hst bigint NOT NULL,
    fecha timestamp without time zone NOT NULL,
    usuario_fk bigint NOT NULL,
    pedidos_fk bigint NOT NULL,
    producto_fk bigint NOT NULL,
    CONSTRAINT historial_pkey PRIMARY KEY (id_hst)
);

CREATE TABLE IF NOT EXISTS public.informe
(
    id_informe bigint NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default",
    descripcion character varying(255) COLLATE pg_catalog."default",
    modulo_origen character varying(255) COLLATE pg_catalog."default",
    contenido character varying(255) COLLATE pg_catalog."default",
    archivo_url character varying(255) COLLATE pg_catalog."default",
    fecha_generado timestamp without time zone,
    usuario_fk bigint,
    pedidos_fk bigint,
    productos_fk bigint,
    CONSTRAINT informe_pkey PRIMARY KEY (id_informe)
);

CREATE TABLE IF NOT EXISTS public.informe_pedidos
(
    informe_pedidos_fk character varying(36) COLLATE pg_catalog."default",
    pedidos_fk bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.informe_productos
(
    informe_productos_fk character varying(36) COLLATE pg_catalog."default",
    productos_id_prodc bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.informe_usuario
(
    informe_empleados_fk character varying(36) COLLATE pg_catalog."default",
    usuario_id_us bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.marca
(
    id_mprod bigint NOT NULL,
    nombre_mprod character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion_mprod character varying NOT NULL,
    CONSTRAINT marca_pkey PRIMARY KEY (id_mprod)
);

CREATE TABLE IF NOT EXISTS public.modulos
(
    id bigint NOT NULL,
    nombre character varying(255) NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT modulos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.mov_inventario
(
    id_mvin bigint NOT NULL,
    cantidad integer NOT NULL,
    fecha timestamp without time zone NOT NULL,
    productos_fk bigint NOT NULL,
    usuario_fk bigint NOT NULL,
    CONSTRAINT mov_inventario_pkey PRIMARY KEY (id_mvin)
);

CREATE TABLE IF NOT EXISTS public.notificacion
(
    id_ntf bigint NOT NULL,
    nombre_ntf character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    usuario_fk bigint NOT NULL,
    pedido_fk bigint NOT NULL,
    fecha_hora_ntd timestamp without time zone,
    CONSTRAINT notificacion_pkey PRIMARY KEY (id_ntf)
);

CREATE TABLE IF NOT EXISTS public.pedidos
(
    id_p bigint NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_entrega timestamp without time zone NOT NULL,
    estado_pedido_fk bigint NOT NULL,
    sucursal_fk bigint,
    personal_entrega_fk bigint NOT NULL,
    usuario_fk bigint NOT NULL,
    solicitud_fk bigint NOT NULL,
    bodega_fk bigint NOT NULL,
    proveedor_fk bigint,
    PRIMARY KEY (id_p)
);

CREATE TABLE IF NOT EXISTS public.permisos
(
    id bigint NOT NULL,
    modulo_fk bigint NOT NULL,
    usuario_fk bigint NOT NULL,
    rol_fk bigint NOT NULL,
    CONSTRAINT permisos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.personal_entrega
(
    id_psn bigint NOT NULL,
    nombre_psn character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    patente character varying(255) NOT NULL,
    CONSTRAINT personal_entrega_pkey PRIMARY KEY (id_psn)
);

CREATE TABLE IF NOT EXISTS public.productos
(
    id_prodc bigint NOT NULL,
    nombre_prodc character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion_prodc character varying(255) COLLATE pg_catalog."default",
    codigo_interno character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp without time zone NOT NULL,
    marca_fk bigint NOT NULL,
    categoria_fk bigint NOT NULL,
    bodega_fk bigint,
    sucursal_fk bigint,
    CONSTRAINT productos_pkey PRIMARY KEY (id_prodc)
);

CREATE TABLE IF NOT EXISTS public.proveedor
(
    id_provd bigint NOT NULL,
    nombres_provd character varying(255) COLLATE pg_catalog."default" NOT NULL,
    direccion_provd character varying(255) COLLATE pg_catalog."default" NOT NULL,
    correo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    razon_social character varying(255) COLLATE pg_catalog."default" NOT NULL,
    rut_empresa numeric,
    CONSTRAINT proveedor_pkey PRIMARY KEY (id_provd)
);

CREATE TABLE IF NOT EXISTS public.rol
(
    id_rol bigint NOT NULL,
    nombre_rol character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT rol_pkey PRIMARY KEY (id_rol)
);

CREATE TABLE IF NOT EXISTS public.stock
(
    id_stock bigint NOT NULL,
    stock numeric NOT NULL,
    stock_minimo numeric,
    bodega_fk bigint,
    productos_fk bigint NOT NULL,
    sucursal_fk bigint,
    proveedor_fk bigint,
    CONSTRAINT stock_pkey PRIMARY KEY (id_stock)
);

CREATE TABLE IF NOT EXISTS public.sucursal
(
    id bigint NOT NULL,
    nombre_sucursal character varying(255) COLLATE pg_catalog."default",
    direccion character varying(255) COLLATE pg_catalog."default",
    descripcion character varying(255) COLLATE pg_catalog."default",
    bodega_fk bigint NOT NULL,
    CONSTRAINT sucursal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_us bigint NOT NULL,
    rut character varying,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    correo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    contrasena character varying(255) COLLATE pg_catalog."default" NOT NULL,
    bodeg_fk bigint,
    sucursal_fk bigint,
    rol_fk bigint NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_us)
);

CREATE TABLE IF NOT EXISTS public.solicitudes
(
    id_solc bigint NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    observacion "char" NOT NULL,
    fk_sucursal bigint NOT NULL,
    fk_bodega bigint NOT NULL,
    usuarios_fk bigint NOT NULL,
    PRIMARY KEY (id_solc)
);

CREATE TABLE IF NOT EXISTS public.solicitud_productos
(
    id_solc_prod bigint NOT NULL,
    cantidad numeric NOT NULL,
    solicitud_fk bigint NOT NULL,
    producto_fk bigint NOT NULL,
    PRIMARY KEY (id_solc_prod)
);

ALTER TABLE IF EXISTS public.detalle_pedido
    ADD CONSTRAINT detalle_pedido_productos_pedido_fk_fkey FOREIGN KEY (productos_pedido_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalle_pedido
    ADD FOREIGN KEY (pedidos_fk)
    REFERENCES public.pedidos (id_p) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.historial
    ADD CONSTRAINT historial_usuario_fk_fkey FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.historial
    ADD FOREIGN KEY (producto_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.historial
    ADD FOREIGN KEY (pedidos_fk)
    REFERENCES public.pedidos (id_p) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.informe
    ADD FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.informe
    ADD FOREIGN KEY (productos_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.informe
    ADD FOREIGN KEY (pedidos_fk)
    REFERENCES public.pedidos (id_p) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.informe_pedidos
    ADD FOREIGN KEY (pedidos_fk)
    REFERENCES public.pedidos (id_p) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.informe_productos
    ADD CONSTRAINT informe_productos_productos_id_prodc_fkey FOREIGN KEY (productos_id_prodc)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.informe_usuario
    ADD CONSTRAINT informe_usuario_usuario_id_us_fkey FOREIGN KEY (usuario_id_us)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.mov_inventario
    ADD CONSTRAINT mov_inventario_productos_fk_fkey FOREIGN KEY (productos_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.mov_inventario
    ADD CONSTRAINT mov_inventario_usuario_fk_fkey FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificacion
    ADD CONSTRAINT notificacion_usuario_fk_fkey FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificacion
    ADD FOREIGN KEY (pedido_fk)
    REFERENCES public.pedidos (id_p) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedidos
    ADD CONSTRAINT pedidos_estado_pedido_fk_fkey FOREIGN KEY (estado_pedido_fk)
    REFERENCES public.estado_pedido (id_estped) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedidos
    ADD CONSTRAINT pedidos_personal_entrega_fk_fkey FOREIGN KEY (personal_entrega_fk)
    REFERENCES public.personal_entrega (id_psn) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedidos
    ADD CONSTRAINT pedidos_sucursal_fk_fkey FOREIGN KEY (sucursal_fk)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedidos
    ADD CONSTRAINT pedidos_usuario_fk_fkey FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedidos
    ADD FOREIGN KEY (solicitud_fk)
    REFERENCES public.solicitudes (id_solc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedidos
    ADD FOREIGN KEY (bodega_fk)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedidos
    ADD FOREIGN KEY (proveedor_fk)
    REFERENCES public.proveedor (id_provd) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.permisos
    ADD CONSTRAINT permisos_modulo_fk_fkey FOREIGN KEY (modulo_fk)
    REFERENCES public.modulos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.permisos
    ADD CONSTRAINT permisos_rol_fk_fkey FOREIGN KEY (rol_fk)
    REFERENCES public.rol (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.permisos
    ADD CONSTRAINT permisos_usuario_fk_fkey FOREIGN KEY (usuario_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos
    ADD CONSTRAINT productos_categoria_fk_fkey FOREIGN KEY (categoria_fk)
    REFERENCES public.categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos
    ADD CONSTRAINT productos_marca_fk_fkey FOREIGN KEY (marca_fk)
    REFERENCES public.marca (id_mprod) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos
    ADD FOREIGN KEY (bodega_fk)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.productos
    ADD FOREIGN KEY (id_prodc)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.productos
    ADD FOREIGN KEY (sucursal_fk)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.stock
    ADD CONSTRAINT stock_bodega_fk_fkey FOREIGN KEY (bodega_fk)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stock
    ADD CONSTRAINT stock_productos_fk_fkey FOREIGN KEY (productos_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stock
    ADD CONSTRAINT stock_proveedor_fk_fkey FOREIGN KEY (proveedor_fk)
    REFERENCES public.proveedor (id_provd) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stock
    ADD CONSTRAINT stock_sucursal_fk_fkey FOREIGN KEY (sucursal_fk)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sucursal
    ADD CONSTRAINT sucursal_bodega_fk_fkey FOREIGN KEY (bodega_fk)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT usuario_bodeg_fk_fkey FOREIGN KEY (bodeg_fk)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT usuario_rol_fk_fkey FOREIGN KEY (rol_fk)
    REFERENCES public.rol (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT usuario_sucursal_fk_fkey FOREIGN KEY (sucursal_fk)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.solicitudes
    ADD FOREIGN KEY (fk_sucursal)
    REFERENCES public.sucursal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.solicitudes
    ADD FOREIGN KEY (fk_bodega)
    REFERENCES public.bodega_central (id_bdg) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.solicitudes
    ADD FOREIGN KEY (usuarios_fk)
    REFERENCES public.usuario (id_us) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.solicitud_productos
    ADD FOREIGN KEY (solicitud_fk)
    REFERENCES public.solicitudes (id_solc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.solicitud_productos
    ADD FOREIGN KEY (producto_fk)
    REFERENCES public.productos (id_prodc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;